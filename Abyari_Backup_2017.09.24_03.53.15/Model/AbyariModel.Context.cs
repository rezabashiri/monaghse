//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abyari.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AbyariEntities : DbContext
    {
        public AbyariEntities()
            : base("name=AbyariEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<PaymankarReshte> PaymankarReshtes { get; set; }
        public DbSet<ZirProjeTahvilMovaghat> ZirProjeTahvilMovaghats { get; set; }
        public DbSet<Sherkat> Sherkats { get; set; }
        public DbSet<NoeProje> NoeProjes { get; set; }
        public DbSet<Reshte> Reshtes { get; set; }
        public DbSet<Moshtary> Moshtaries { get; set; }
        public DbSet<RotbeReshte> RotbeReshtes { get; set; }
        public DbSet<ZirProje> ZirProjes { get; set; }
        public DbSet<ViewPaymankarReshte> ViewPaymankarReshtes { get; set; }
        public DbSet<Shahrestan> Shahrestans { get; set; }
        public DbSet<ViewMahal> ViewMahals { get; set; }
        public DbSet<Paymankar> Paymankars { get; set; }
        public DbSet<ZirProjeReservation> ZirProjeReservations { get; set; }
        public DbSet<ViewZirProje> ViewZirProjes { get; set; }
        public DbSet<ViewZirProjeMoshtary> ViewZirProjeMoshtaries { get; set; }
        public DbSet<ViewZirprojeResevation> ViewZirprojeResevations { get; set; }
        public DbSet<Config> Configs { get; set; }
    
        public virtual ObjectResult<ViewZirProjeMoshtary> SearchZirProje_Get(string whereParam)
        {
            var whereParamParameter = whereParam != null ?
                new ObjectParameter("WhereParam", whereParam) :
                new ObjectParameter("WhereParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewZirProjeMoshtary>("SearchZirProje_Get", whereParamParameter);
        }
    
        public virtual ObjectResult<ViewZirProjeMoshtary> SearchZirProje_Get(string whereParam, MergeOption mergeOption)
        {
            var whereParamParameter = whereParam != null ?
                new ObjectParameter("WhereParam", whereParam) :
                new ObjectParameter("WhereParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewZirProjeMoshtary>("SearchZirProje_Get", mergeOption, whereParamParameter);
        }
    
        public virtual ObjectResult<sp_ListOFPaymankarsProject_Result> sp_ListOFPaymankarsProject(Nullable<int> userid, string whereParam)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var whereParamParameter = whereParam != null ?
                new ObjectParameter("WhereParam", whereParam) :
                new ObjectParameter("WhereParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListOFPaymankarsProject_Result>("sp_ListOFPaymankarsProject", useridParameter, whereParamParameter);
        }
    
        public virtual ObjectResult<Paymankar> sp_SearchPaymankar(string condition)
        {
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymankar>("sp_SearchPaymankar", conditionParameter);
        }
    
        public virtual ObjectResult<Paymankar> sp_SearchPaymankar(string condition, MergeOption mergeOption)
        {
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymankar>("sp_SearchPaymankar", mergeOption, conditionParameter);
        }
    
        public virtual int SetPaymankarInvoiceID(Nullable<int> paymankarID, Nullable<System.Guid> invoiceID)
        {
            var paymankarIDParameter = paymankarID.HasValue ?
                new ObjectParameter("PaymankarID", paymankarID) :
                new ObjectParameter("PaymankarID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetPaymankarInvoiceID", paymankarIDParameter, invoiceIDParameter);
        }
    
        public virtual ObjectResult<ViewPaymankarReshte> ListOfPaymankaranMojaz(string reshteIds, string conditions, Nullable<int> iDZirProje)
        {
            var reshteIdsParameter = reshteIds != null ?
                new ObjectParameter("ReshteIds", reshteIds) :
                new ObjectParameter("ReshteIds", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("Conditions", conditions) :
                new ObjectParameter("Conditions", typeof(string));
    
            var iDZirProjeParameter = iDZirProje.HasValue ?
                new ObjectParameter("IDZirProje", iDZirProje) :
                new ObjectParameter("IDZirProje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewPaymankarReshte>("ListOfPaymankaranMojaz", reshteIdsParameter, conditionsParameter, iDZirProjeParameter);
        }
    
        public virtual ObjectResult<ViewPaymankarReshte> ListOfPaymankaranMojaz(string reshteIds, string conditions, Nullable<int> iDZirProje, MergeOption mergeOption)
        {
            var reshteIdsParameter = reshteIds != null ?
                new ObjectParameter("ReshteIds", reshteIds) :
                new ObjectParameter("ReshteIds", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("Conditions", conditions) :
                new ObjectParameter("Conditions", typeof(string));
    
            var iDZirProjeParameter = iDZirProje.HasValue ?
                new ObjectParameter("IDZirProje", iDZirProje) :
                new ObjectParameter("IDZirProje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewPaymankarReshte>("ListOfPaymankaranMojaz", mergeOption, reshteIdsParameter, conditionsParameter, iDZirProjeParameter);
        }
    
        public virtual ObjectResult<sp_ReportTotalGroupByCompany_Result> sp_ReportTotalGroupByCompany(string condition, string fromDate)
        {
            var conditionParameter = condition != null ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportTotalGroupByCompany_Result>("sp_ReportTotalGroupByCompany", conditionParameter, fromDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_DeliveryProje(Nullable<int> iDZirProje)
        {
            var iDZirProjeParameter = iDZirProje.HasValue ?
                new ObjectParameter("IDZirProje", iDZirProje) :
                new ObjectParameter("IDZirProje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_DeliveryProje", iDZirProjeParameter);
        }
    
        public virtual int sp_Contract(Nullable<int> idproje, Nullable<int> idpaymankar, string date, string entry)
        {
            var idprojeParameter = idproje.HasValue ?
                new ObjectParameter("idproje", idproje) :
                new ObjectParameter("idproje", typeof(int));
    
            var idpaymankarParameter = idpaymankar.HasValue ?
                new ObjectParameter("idpaymankar", idpaymankar) :
                new ObjectParameter("idpaymankar", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var entryParameter = entry != null ?
                new ObjectParameter("entry", entry) :
                new ObjectParameter("entry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contract", idprojeParameter, idpaymankarParameter, dateParameter, entryParameter);
        }
    
        public virtual int Import(Nullable<int> userID, Nullable<int> roleID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Import", userIDParameter, roleIDParameter);
        }
    
        public virtual int sp_ZirProjeReserve(Nullable<int> iDPaymankar, Nullable<int> iDZirProje, Nullable<bool> tavafogh)
        {
            var iDPaymankarParameter = iDPaymankar.HasValue ?
                new ObjectParameter("IDPaymankar", iDPaymankar) :
                new ObjectParameter("IDPaymankar", typeof(int));
    
            var iDZirProjeParameter = iDZirProje.HasValue ?
                new ObjectParameter("IDZirProje", iDZirProje) :
                new ObjectParameter("IDZirProje", typeof(int));
    
            var tavafoghParameter = tavafogh.HasValue ?
                new ObjectParameter("Tavafogh", tavafogh) :
                new ObjectParameter("Tavafogh", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZirProjeReserve", iDPaymankarParameter, iDZirProjeParameter, tavafoghParameter);
        }
    
        public virtual ObjectResult<sp_GetPaymanakrStatistics_Result> sp_GetPaymanakrStatistics(Nullable<int> userId, string reportDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var reportDateParameter = reportDate != null ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPaymanakrStatistics_Result>("sp_GetPaymanakrStatistics", userIdParameter, reportDateParameter);
        }
    
        public virtual ObjectResult<ViewZirprojeResevation> sp_SearchReserved(string condition, ObjectParameter rowCount)
        {
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewZirprojeResevation>("sp_SearchReserved", conditionParameter, rowCount);
        }
    
        public virtual ObjectResult<ViewZirprojeResevation> sp_SearchReserved(string condition, ObjectParameter rowCount, MergeOption mergeOption)
        {
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewZirprojeResevation>("sp_SearchReserved", mergeOption, conditionParameter, rowCount);
        }
    
        public virtual ObjectResult<Paymankar> sp_GetPaymankarDetail(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymankar>("sp_GetPaymankarDetail", userIdParameter);
        }
    
        public virtual ObjectResult<Paymankar> sp_GetPaymankarDetail(Nullable<int> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymankar>("sp_GetPaymankarDetail", mergeOption, userIdParameter);
        }
    
        public virtual int sp_ZirProjeUnReserve(Nullable<int> iDPaymankar, Nullable<int> iDZirProje)
        {
            var iDPaymankarParameter = iDPaymankar.HasValue ?
                new ObjectParameter("IDPaymankar", iDPaymankar) :
                new ObjectParameter("IDPaymankar", typeof(int));
    
            var iDZirProjeParameter = iDZirProje.HasValue ?
                new ObjectParameter("IDZirProje", iDZirProje) :
                new ObjectParameter("IDZirProje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZirProjeUnReserve", iDPaymankarParameter, iDZirProjeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_SetPaymankarUserID(Nullable<int> iDPaymankar, Nullable<int> userID)
        {
            var iDPaymankarParameter = iDPaymankar.HasValue ?
                new ObjectParameter("IDPaymankar", iDPaymankar) :
                new ObjectParameter("IDPaymankar", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_SetPaymankarUserID", iDPaymankarParameter, userIDParameter);
        }
    
        public virtual int sp_AddUpdateConfig(Nullable<int> iD, string scoring)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var scoringParameter = scoring != null ?
                new ObjectParameter("Scoring", scoring) :
                new ObjectParameter("Scoring", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddUpdateConfig", iDParameter, scoringParameter);
        }
    }
}
